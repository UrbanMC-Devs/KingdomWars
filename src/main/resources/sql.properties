# === Nation Names/UUID Table ===
create-nations-table=CREATE TABLE IF NOT EXISTS NATION_NAMES (NATION_UUID TEXT PRIMARY KEY, NATION_NAME TEXT);

insert-nation=INSERT INTO NATION_NAMES (NATION_UUID, NATION_NAME) VALUES (?, ?);

update-nation-name=UPDATE NATION_NAMES SET NATION_NAME = ? WHERE NATION_UUID = ?;


# === Past Wars Table ===
create-past-wars-table=CREATE TABLE IF NOT EXISTS PAST_WARS \
(ID INTEGER PRIMARY KEY AUTOINCREMENT, DECLARING TEXT REFERENCES NATION_NAMES(NATION_UUID), \
DECLARED TEXT REFERENCES NATION_NAMES(NATION_UUID), DECLARING_POINTS INT, DECLARED_POINTS INT, \
START_TIME LONG, END_TIME LONG, MONEY_WON DOUBLE, MONEY_LOSS DOUBLE,  TOWNBLOCKS_WON INT, TOWNBLOCKS_LOST INT, \
RESULT TEXT);

insert-war=INSERT INTO PAST_WARS \
(DECLARING, DECLARED, DECLARING_POINTS, DECLARED_POINTS, START_TIME, END_TIME, \
MONEY_WON, MONEY_LOSS, TOWNBLOCKS_WON, TOWNBLOCKS_LOST, RESULT) \
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ? ,?, ?);

select-past-war=SELECT ID, dcn.NATION_NAME DECLARING_NAME, \
dn.NATION_NAME DECLARED_NAME, \
DECLARING_POINTS, DECLARED_POINTS, START_TIME, END_TIME, MONEY_WON, MONEY_LOSS, TOWNBLOCKS_WON, TOWNBLOCKS_LOST, RESULT \
FROM PAST_WARS pw \
LEFT JOIN NATION_NAMES dcn \
ON pw.DECLARING = dcn.NATION_UUID \
LEFT JOIN NATION_NAMES dn \
ON pw.DECLARED = dn.NATION_UUID

select-past-war.nation-uuid= WHERE dcn.NATION_UUID = ? OR dn.NATION_UUID = ? ORDER BY END_TIME ASC;
select-past-war.war-id= WHERE ID = ?
select-past-war.recent= WHERE END_TIME > ? ORDER BY END_TIME DESC;

delete-war=DELETE FROM PAST_WARS WHERE ID = ?;


# === Past War Allies Table ===
create-past-war-allies=CREATE TABLE IF NOT EXISTS PAST_WAR_ALLIES (WAR_ID INT REFERENCES PAST_WARS(ID) ON DELETE CASCADE, \
ALLY TEXT REFERENCES NATION_NAMES(NATION_UUID), DECLARING BOOLEAN);

insert-ally=INSERT INTO PAST_WAR_ALLIES (WAR_ID, ALLY, DECLARING) VALUES (?, ?, ?)

select-war-allies=SELECT nn.NATION_NAME ALLY_NAME, DECLARING \
FROM PAST_WAR_ALLIES pwa \
LEFT JOIN NATION_NAMES nn ON pwa.ALLY = nn.NATION_UUID WHERE WAR_ID = ?;


# === Leaderboard Table ====
create-leaderboard-table=CREATE TABLE IF NOT EXISTS LEADERBOARD (\
  NATION TEXT PRIMARY KEY REFERENCES NATION_NAMES(NATION_UUID) ON DELETE CASCADE,\
  WINS INT DEFAULT 0, LOSSES INT DEFAULT 0);

add-leaderboard-win=INSERT INTO LEADERBOARD(NATION, WINS, LOSSES) VALUES(?, 1, 0) \
ON CONFLICT(NATION) DO UPDATE SET WINS = WINS + 1;

add-leaderboard-loss=INSERT INTO LEADERBOARD(NATION, WINS, LOSSES) VALUES(?, 0, 1) \
ON CONFLICT(NATION) DO UPDATE SET LOSSES = LOSSES + 1;

select-leaderboard=SELECT nn.NATION_NAME NAME, WINS, LOSSES \
  FROM LEADERBOARD lb \
  LEFT JOIN NATION_NAMES nn \
  ON lb.NATION = nn.NATION_UUID \
  ORDER BY WINS DESC, LOSSES ASC;

delete-nation-leaderboard=DELETE FROM LEADERBOARD \
  WHERE NATION = ?;


# === MISC ====
recent-id=SELECT last_insert_rowid()